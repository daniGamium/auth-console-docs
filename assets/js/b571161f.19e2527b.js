"use strict";(self.webpackChunk_logto_docs=self.webpackChunk_logto_docs||[]).push([[8934],{49613:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return h}});var i=n(59496);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,i,o=function(e,t){if(null==e)return{};var n,i,o={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=i.createContext({}),c=function(e){var t=i.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},s=function(e){var t=c(e.components);return i.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},d=i.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,l=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),d=c(n),h=o,m=d["".concat(l,".").concat(h)]||d[h]||u[h]||r;return n?i.createElement(m,a(a({ref:t},s),{},{components:n})):i.createElement(m,a({ref:t},s))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,a=new Array(r);a[0]=d;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p.mdxType="string"==typeof e?e:o,a[1]=p;for(var c=2;c<r;c++)a[c]=n[c];return i.createElement.apply(null,a)}return i.createElement.apply(null,n)}d.displayName="MDXCreateElement"},49411:function(e,t,n){n.d(t,{ZP:function(){return l}});var i=n(665),o=n(40151),r=(n(59496),n(49613)),a=["components"],p={toc:[]};function l(e){var t=e.components,n=(0,o.Z)(e,a);return(0,r.kt)("wrapper",(0,i.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Native App")," is an app that runs in a native environment. E.g., iOS app, Android app."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Single Page App")," is an app that runs in a web browser, which updates the page with the new data from the server without loading entire new pages. E.g., React DOM app, Vue app."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Traditional Web App")," is an app that renders and updates pages by the web server alone. E.g., JSP, PHP.")))}l.isMDXComponent=!0},43283:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return d}});var i=n(665),o=n(40151),r=(n(59496),n(49613)),a=n(49411),p=["components"],l={},c="\ud83d\udcf1 Applications",s={unversionedId:"docs/references/applications/README",id:"docs/references/applications/README",title:"\ud83d\udcf1 Applications",description:"Introduction",source:"@site/docs/docs/references/applications/README.mdx",sourceDirName:"docs/references/applications",slug:"/docs/references/applications/",permalink:"/docs/references/applications/",draft:!1,editUrl:"https://github.com/gamiumapp/auth-console-docs/docs/docs/references/applications/README.mdx",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"\ud83d\ude80 Deployment",permalink:"/docs/recipes/deployment/"},next:{title:"\ud83d\udd0c Connectors",permalink:"/docs/references/connectors/"}},u={},d=[{value:"Introduction",id:"introduction",level:2},{value:"Properties",id:"properties",level:2},{value:"Application ID",id:"application-id",level:3},{value:"Application Types",id:"application-types",level:3},{value:"Application Name",id:"application-name",level:3},{value:"Description",id:"description",level:3},{value:"Authorization Endpoint",id:"authorization-endpoint",level:3},{value:"Redirect URIs",id:"redirect-uris",level:3},{value:"Post Sign Out Redirect URI",id:"post-sign-out-redirect-uri",level:3},{value:"CORS Allowed Origins",id:"cors-allowed-origins",level:3},{value:"Token Endpoint",id:"token-endpoint",level:3}],h={toc:d};function m(e){var t=e.components,n=(0,o.Z)(e,p);return(0,r.kt)("wrapper",(0,i.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"-applications"},"\ud83d\udcf1 Applications"),(0,r.kt)("h2",{id:"introduction"},"Introduction"),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Applications")," are used to identify your applications in Logto for OIDC, sign-in experience, audit logs, etc."),(0,r.kt)("p",null,"If you want to integrate your application with Logto, see ",(0,r.kt)("a",{parentName:"p",href:"../../recipes/integrate-logto"},"Integrate Logto in your application"),"."),(0,r.kt)("h2",{id:"properties"},"Properties"),(0,r.kt)("h3",{id:"application-id"},"Application ID"),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Application ID")," is a unique auto-generated key to identify your application in Logto, and is used as ",(0,r.kt)("a",{parentName:"p",href:"https://www.oauth.com/oauth2-servers/client-registration/client-id-secret/"},"client id")," in OAuth 2.0."),(0,r.kt)("h3",{id:"application-types"},"Application Types"),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Applications")," should be one of the following application types:"),(0,r.kt)(a.ZP,{mdxType:"ApplicationTypesIntro"}),(0,r.kt)("h3",{id:"application-name"},"Application Name"),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Application Name")," is a human-readable name of the application and will be displayed in the admin console."),(0,r.kt)("h3",{id:"description"},"Description"),(0,r.kt)("p",null,"A brief description of the application will be displayed on the admin console application details page."),(0,r.kt)("h3",{id:"authorization-endpoint"},"Authorization Endpoint"),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Authorization Endpoint")," is an OIDC term, and it performs authentication of the user."),(0,r.kt)("p",null,"In Logto, The authorization endpoint invokes the authorization flow for users."),(0,r.kt)("p",null,"You can check out the ",(0,r.kt)("a",{parentName:"p",href:"https://openid.net/specs/openid-connect-core-1_0.html#AuthorizationEndpoint"},"Authorization Endpoint")," for more information."),(0,r.kt)("h3",{id:"redirect-uris"},"Redirect URIs"),(0,r.kt)("p",null,"Allowed URIs that redirect the user to the application after signing in to Logto."),(0,r.kt)("p",null,"It will be used to validate the redirect URI used in the authorization request, so every redirect URI to be used should be pre-added to this allowed list."),(0,r.kt)("p",null,"You can check out the ",(0,r.kt)("a",{parentName:"p",href:"https://datatracker.ietf.org/doc/html/rfc6749#section-3.1.2"},"Redirection Endpoint")," for more information."),(0,r.kt)("h3",{id:"post-sign-out-redirect-uri"},"Post Sign Out Redirect URI"),(0,r.kt)("p",null,"Allowed URIs that redirect the user to the application after signing out from Logto."),(0,r.kt)("p",null,"It will be used to validate the redirect URI used in the end session request, so every redirect URI to be used should be pre-added to this allowed list."),(0,r.kt)("p",null,"You can check out the ",(0,r.kt)("a",{parentName:"p",href:"https://openid.net/specs/openid-connect-rpinitiated-1_0.html#RPLogout"},"RP-Initiated Logout")," for more information."),(0,r.kt)("h3",{id:"cors-allowed-origins"},"CORS Allowed Origins"),(0,r.kt)("p",null,"All permitted origins when requesting the Logto service."),(0,r.kt)("p",null,"Any allowed origin where the user makes requests to the Logto service should be added to this list."),(0,r.kt)("p",null,"In general, the ",(0,r.kt)("em",{parentName:"p"},"CORS Allowed Origins")," should contain the origin where your application will be served."),(0,r.kt)("h3",{id:"token-endpoint"},"Token Endpoint"),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Token Endpoint")," is an OIDC term, and it is used by the client to obtain an access token by presenting its authorization grant or refresh token."),(0,r.kt)("p",null,"You can check out the ",(0,r.kt)("a",{parentName:"p",href:"https://openid.net/specs/openid-connect-core-1_0.html#TokenEndpoint"},"Token Endpoint")," for more information."))}m.isMDXComponent=!0}}]);