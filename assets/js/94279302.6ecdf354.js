"use strict";(self.webpackChunk_logto_docs=self.webpackChunk_logto_docs||[]).push([[9159],{49613:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var r=n(59496);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=u(n),m=a,f=d["".concat(l,".").concat(m)]||d[m]||p[m]||o;return n?r.createElement(f,i(i({ref:t},c),{},{components:n})):r.createElement(f,i({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var u=2;u<o;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5412:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return s},metadata:function(){return u},toc:function(){return p}});var r=n(665),a=n(40151),o=(n(59496),n(49613)),i=["components"],s={sidebar_position:3},l="You don't need a user table",u={unversionedId:"docs/recipes/manage-users/you-dont-need-a-user-table",id:"docs/recipes/manage-users/you-dont-need-a-user-table",title:"You don't need a user table",description:"Identify user",source:"@site/docs/docs/recipes/manage-users/you-dont-need-a-user-table.md",sourceDirName:"docs/recipes/manage-users",slug:"/docs/recipes/manage-users/you-dont-need-a-user-table",permalink:"/docs/recipes/manage-users/you-dont-need-a-user-table",draft:!1,editUrl:"https://github.com/gamiumapp/auth-console-docs/docs/docs/recipes/manage-users/you-dont-need-a-user-table.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"docsSidebar",previous:{title:"Management API",permalink:"/docs/recipes/manage-users/management-api"},next:{title:"\ud83d\ude9d Interact with Management API",permalink:"/docs/recipes/interact-with-management-api/"}},c={},p=[{value:"Identify user",id:"identify-user",level:2},{value:"Why no user table",id:"why-no-user-table",level:2},{value:"Compare with the common practice",id:"compare-with-the-common-practice",level:2}],d={toc:p};function m(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"you-dont-need-a-user-table"},"You don't need a user table"),(0,o.kt)("h2",{id:"identify-user"},"Identify user"),(0,o.kt)("p",null,"We recommend using ",(0,o.kt)("inlineCode",{parentName:"p"},"user.id")," to identify a user since we guarantee every user has a unique and non-null ",(0,o.kt)("inlineCode",{parentName:"p"},"id")," property."),(0,o.kt)("p",null,"Also, ",(0,o.kt)("inlineCode",{parentName:"p"},"username")," ",(0,o.kt)("inlineCode",{parentName:"p"},"primary_email")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"primary_phone")," are unique properties. But they may be empty. Remember to handle ",(0,o.kt)("inlineCode",{parentName:"p"},"null")," properly if you want to use these properties to identify a user."),(0,o.kt)("h2",{id:"why-no-user-table"},"Why no user table"),(0,o.kt)("p",null,"When preparing to take Logto as an identity solution, you may think about approaches to organizing user information and user-related stuffs."),(0,o.kt)("p",null,"Traditionally, developers will create a user table in a SQL database containing the profile and other user-related information, then create a many-to-one relation in other tables, a ",(0,o.kt)("inlineCode",{parentName:"p"},"user")," column pointing to the user table. For other identity providers, take Google as an example. Create a column named ",(0,o.kt)("inlineCode",{parentName:"p"},"google_id"),' to achieve "sign in with Google" linking. Now, for Logto, you may want to create a column ',(0,o.kt)("inlineCode",{parentName:"p"},"logto_id"),", but it is not a good way since Logto is more than a social provider, it is a solution that can take charge of all user-related stuffs."),(0,o.kt)("p",null,"With the help of Logto, ",(0,o.kt)("strong",{parentName:"p"},"you don't need a user table"),"."),(0,o.kt)("p",null,"Here is a common practice (with Logto):"),(0,o.kt)("p",null,"Forget the user table, store user info in Logto:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Create ",(0,o.kt)("inlineCode",{parentName:"li"},"user_id")," column in other tables, save Logto's ",(0,o.kt)("inlineCode",{parentName:"li"},"user.id"),", refer to the previous chapter ",(0,o.kt)("a",{parentName:"li",href:"#identify-user"},"Identify User"),"."),(0,o.kt)("li",{parentName:"ol"},"Call ",(0,o.kt)("a",{parentName:"li",href:"/docs/recipes/manage-users/management-api"},"Logto's Management API")," for CRUD: create and update a user, get user detail, list users..."),(0,o.kt)("li",{parentName:"ol"},"Save any additional user information to custom data. Check this link for more info: ",(0,o.kt)("a",{parentName:"li",href:"/docs/references/users/custom-data"},"User Custom Data"),".")),(0,o.kt)("p",null,'By doing this, Logto is now playing the "user table" role.'),(0,o.kt)("p",null,'Let\'s say that you have an "Online Store" app using Logto as the identity service, and you want two features:'),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Store user preference data in the cloud."),(0,o.kt)("li",{parentName:"ol"},"Access control for different groups of users.")),(0,o.kt)("p",null,"With the help of ",(0,o.kt)("em",{parentName:"p"},"customData"),", we can quickly implement this, and the data object will be like:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "appearenceMode": "DarkMode",\n  "role": "customer"\n}\n')),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"},'You cannot do "join" or other complex queries on Logto\'s user storage. In this circumstance, you should use a cache layer or your own user table.')),(0,o.kt)("h2",{id:"compare-with-the-common-practice"},"Compare with the common practice"),(0,o.kt)("p",null,"TODO:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"how to do in common practice"),(0,o.kt)("li",{parentName:"ul"},"pros and cons")))}m.isMDXComponent=!0}}]);