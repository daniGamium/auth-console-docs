"use strict";(self.webpackChunk_logto_docs=self.webpackChunk_logto_docs||[]).push([[2277],{49613:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return g}});var r=n(59496);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),u=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},s=function(e){var t=u(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=u(n),g=o,f=d["".concat(c,".").concat(g)]||d[g]||p[g]||i;return n?r.createElement(f,a(a({ref:t},s),{},{components:n})):r.createElement(f,a({ref:t},s))}));function g(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var u=2;u<i;u++)a[u]=n[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},74846:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return c},default:function(){return g},frontMatter:function(){return l},metadata:function(){return u},toc:function(){return p}});var r=n(665),o=n(40151),i=(n(59496),n(49613)),a=["components"],l={sidebar_position:1.1},c=void 0,u={unversionedId:"sdk/Swift/LogtoClient/Enums/LogtoClientErrorTypes.SignIn",id:"sdk/Swift/LogtoClient/Enums/LogtoClientErrorTypes.SignIn",title:"LogtoClientErrorTypes.SignIn",description:"ENUM",source:"@site/docs/sdk/Swift/LogtoClient/Enums/LogtoClientErrorTypes.SignIn.md",sourceDirName:"sdk/Swift/LogtoClient/Enums",slug:"/sdk/Swift/LogtoClient/Enums/LogtoClientErrorTypes.SignIn",permalink:"/sdk/Swift/LogtoClient/Enums/LogtoClientErrorTypes.SignIn",draft:!1,editUrl:"https://github.com/gamiumapp/auth-console-docs/docs/sdk/Swift/LogtoClient/Enums/LogtoClientErrorTypes.SignIn.md",tags:[],version:"current",sidebarPosition:1.1,frontMatter:{sidebar_position:1.1},sidebar:"sdkSidebar",previous:{title:"LogtoClientErrorTypes.OidcConfig",permalink:"/sdk/Swift/LogtoClient/Enums/LogtoClientErrorTypes.OidcConfig"},next:{title:"LogtoClientErrorTypes.SignOut",permalink:"/sdk/Swift/LogtoClient/Enums/LogtoClientErrorTypes.SignOut"}},s={},p=[{value:"Cases",id:"cases",level:2},{value:"<code>unknownError</code>",id:"unknownerror",level:3},{value:"<code>authFailed</code>",id:"authfailed",level:3},{value:"<code>unableToConstructRedirectUri</code>",id:"unabletoconstructredirecturi",level:3},{value:"<code>unableToConstructAuthUri</code>",id:"unabletoconstructauthuri",level:3},{value:"<code>unableToFetchToken</code>",id:"unabletofetchtoken",level:3},{value:"<code>unexpectedSignInCallback</code>",id:"unexpectedsignincallback",level:3}],d={toc:p};function g(e){var t=e.components,n=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"ENUM")),(0,i.kt)("h1",{id:"logtoclienterrortypessignin"},(0,i.kt)("inlineCode",{parentName:"h1"},"LogtoClientErrorTypes.SignIn")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-swift"},"public enum SignIn: String\n")),(0,i.kt)("h2",{id:"cases"},"Cases"),(0,i.kt)("h3",{id:"unknownerror"},(0,i.kt)("inlineCode",{parentName:"h3"},"unknownError")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-swift"},"case unknownError\n")),(0,i.kt)("h3",{id:"authfailed"},(0,i.kt)("inlineCode",{parentName:"h3"},"authFailed")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-swift"},"case authFailed\n")),(0,i.kt)("p",null,"Failed to complete the authentication.\nThis could be an internal error or the user canceled the authentication."),(0,i.kt)("h3",{id:"unabletoconstructredirecturi"},(0,i.kt)("inlineCode",{parentName:"h3"},"unableToConstructRedirectUri")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-swift"},"case unableToConstructRedirectUri\n")),(0,i.kt)("p",null,"Unable to construct Redirect URI for the given string."),(0,i.kt)("h3",{id:"unabletoconstructauthuri"},(0,i.kt)("inlineCode",{parentName:"h3"},"unableToConstructAuthUri")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-swift"},"case unableToConstructAuthUri\n")),(0,i.kt)("p",null,"Unable to construct Redirect URI for the config.\nPlease double check OIDC and Logto config."),(0,i.kt)("h3",{id:"unabletofetchtoken"},(0,i.kt)("inlineCode",{parentName:"h3"},"unableToFetchToken")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-swift"},"case unableToFetchToken\n")),(0,i.kt)("p",null,"Unable to finish the initial token request after authentication."),(0,i.kt)("h3",{id:"unexpectedsignincallback"},(0,i.kt)("inlineCode",{parentName:"h3"},"unexpectedSignInCallback")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-swift"},"case unexpectedSignInCallback\n")),(0,i.kt)("p",null,"The sign in callback URI is not valid."))}g.isMDXComponent=!0}}]);